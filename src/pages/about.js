import React from "react";
import Link from "gatsby-link";

import About from "../components/About";
import {
  Header,
  Card,
  Icon,
  Image,
  Segment,
  Divider,
  Label
} from "semantic-ui-react";
import get from "lodash/get";

class AboutPage extends React.Component {
  render() {
    const members = get(this, "props.data.allMember.edges");
    return (
      <div>
        <Segment basic>
          <div>
            FreeCodeCamp Moscow –≥—Ä—É–ø–ø–∞ –¥–ª—è –ª—é–¥–µ–π –∏–∑—É—á–∞—é—â–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É
            —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ{" "}
            <a href="https://www.freecodecamp.org/">freecodecamp.org</a> –∏ —Å
            –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤. –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º –º–∏—Ç–∞–ø—ã, –≥–¥–µ –¥–µ–ª–∏–º—Å—è –æ–ø—ã—Ç–æ–º,
            –∑–∞–¥–∞–µ–º –∏ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.
          </div>
          <br />
          <div>
            –£—Ä–æ–≤–µ–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ –≤–∞–∂–µ–Ω, –≥–ª–∞–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ —É—á–∏—Ç—å—Å—è –∏ –ø–æ–º–æ–≥–∞—Ç—å
            —É—á–∏—Ç—å—Å—è. –ú–∏—Ç–∞–ø—ã –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –Ω–∞ –Ω–∞—à–µ–π{" "}
            <a href="https://www.facebook.com/groups/free.code.camp.moscow/">
              —Å—Ç—Ä–∞–Ω–∏—Ü–µ facebook
            </a>{" "}
            –∏ –≤ <a href="https://moscow-freecodecamp.slack.com/">slack —á–∞—Ç–µ</a>.
          </div>
          <br />
          <div>
            –î–æ–∫–ª–∞–¥—ã –Ω–∞ –º–∏—Ç–∞–ø–∞—Ö –æ—á–µ–Ω—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è. –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —á–µ–º-—Ç–æ
            –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–º, —á—Ç–æ –Ω–µ–¥–∞–≤–Ω–æ –≤—ã—É—á–∏–ª–∏ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ–π? –ù–µ—Ç
            –Ω–∏—á–µ–≥–æ –ø—Ä–æ—â–µ üòä –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–º—É –¥–æ–∫–ª–∞–¥–∞ –≤ —á–∞—Ç –∏–ª–∏ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞
            facebook –∏ –º—ã –≤–∞—Å –¥–æ–±–∞–≤–∏–º –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
          </div>
          <br />
          <div>
            <Label basic>
              <Icon name="html5" />
              HTML5
            </Label>
            <Label basic>
              <Icon name="css3 alternate" />
              CSS3
            </Label>
            <Label basic>
              <Icon name="js square" />
              Javascript
            </Label>
            <Label basic>
              <Icon name="database" />
              Databases
            </Label>
            <Label basic>
              <Icon name="github" />
              Git {"&"} GitHub
            </Label>
            <Label basic>
              <Icon name="node js" />
              Node.js
            </Label>
            <Label basic>
              <Icon name="react" />
              React.js
            </Label>
          </div>
        </Segment>

        <Segment basic>
          <Header as="h1">
            –£—á–∞—Å—Ç–Ω–∏–∫–∏
            <Header.Subheader>
              –ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫, –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –≤ –Ω–∞—à–µ–π
              <Label href="https://github.com/moscow-freecodecamp" size="small">
                <Icon name="github" />
                GitHub –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
              </Label>
            </Header.Subheader>
          </Header>
          <Divider />
          <Card.Group itemsPerRow={3} doubling>
            {members.map(member => {
              const node = member.node;
              return (
                <Card href={node.url}>
                  <Image src={node.avatarUrl} />
                  <Card.Content>
                    <Card.Header>
                      {(() => {
                        if (node.name) {
                          return node.name;
                        } else {
                          return node.login;
                        }
                      })()}
                    </Card.Header>
                    <Card.Meta>
                      <span>{node.location}</span>
                    </Card.Meta>
                    <Card.Description>{node.bio}</Card.Description>
                  </Card.Content>
                  <Card.Content extra>
                    <a href={node.url}>
                      <Icon name="github" link />
                      {node.login}
                    </a>
                  </Card.Content>
                </Card>
              );
            })}
          </Card.Group>
        </Segment>
      </div>
    );
  }
}

export default AboutPage;

export const membersQuery = graphql`
  query membersQuery {
    allMember {
      edges {
        node {
          name
          avatarUrl
          email
          bio
          isHireable
          location
          url
          websiteUrl
          login
        }
      }
    }
  }
`;
